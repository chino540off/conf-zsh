if [ -z "$bmlist" ]; then
  bmlist=""
fi

BOOKMARK_SAVE_DIR=~/conf/zsh/bookmarks
BOOKMARK_ERROR_COLOR=$COLOR_BOLD_LIGHT_RED
BOOKMARK_BM_COLUMN_COLOR=$COLOR_LIGHT_BLUE
BOOKMARK_BM_CURRENT_COLUMN_COLOR=$COLOR_UNDERLINED_LIGHT_BLUE
BOOKMARK_SYM_COLUMN_COLOR=$COLOR_WHITE
BOOKMARK_DIR_COLUMN_COLOR=$COLOR_GREEN
BOOKMARK_SEARCH_COLOR="01;32"

# add function _${cmd}_hook_${bookname}()
# to call function after command
function bm_hook_call()
{
  local cmd=$1
  local name=$2
  local function_name=_${cmd}_hook_${name}

  if typeset -f $function_name > /dev/null; then
    eval $function_name
  fi
}

# add bookmark
function bm ()
{
  local i=
  if [ -z "$1" ]; then
    1=`basename $PWD`
  fi
  export $1="`pwd`"
  bmlist=`for i in $bmlist $1; do echo $i; done | sort -u`
  export bmlist
}

# remove bookmark
function brm ()
{
  local j=
  local i=
  for j in $@; do
    export $j=
    bmlist=`for i in $bmlist; do if [ $i != $j ]; then echo $i; fi; done | sort -u`
  done
  export bmlist
}

# list bookmarks
function bl ()
{
  local i=
  for i in $bmlist; do
    local p="echo \$${i}"
    local dir="`eval $p`"
    if [ -d "$dir" -a -x "$dir" ]; then
      if [ "`readlink -f $dir`" = "`readlink -f $PWD`" ] ; then
        echo "	${BOOKMARK_BM_CURRENT_COLUMN_COLOR}$i${COLOR_RESET}#${BOOKMARK_SYM_COLUMN_COLOR}-->#${BOOKMARK_DIR_COLUMN_COLOR}${dir/$HOME/~}${COLOR_RESET}"
      else
        echo "	${BOOKMARK_BM_COLUMN_COLOR}$i${COLOR_RESET}#${BOOKMARK_SYM_COLUMN_COLOR}-->#${BOOKMARK_DIR_COLUMN_COLOR}${dir/$HOME/~}${COLOR_RESET}"
      fi
    else
      echo "	${BOOKMARK_BM_COLUMN_COLOR}$i${COLOR_RESET}#${BOOKMARK_SYM_COLUMN_COLOR}-->#${BOOKMARK_ERROR_COLOR}${dir/$HOME/~}${COLOR_RESET}"
    fi
  done | column -s \# -t
}

# find (grep) bookmarks
function bf ()
{
  bl | GREP_COLORS="ms=$BOOKMARK_SEARCH_COLOR:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36" egrep "$@"
}

# remove all bookmarks
function bclear ()
{
  for b in $bmlist; do
    unset $b
  done
  export bmlist=
  export BOOKMARK_ENV=
}

# remove broken bookmarks
function bclean ()
{
  local j=
  local i=
  for j in $bmlist; do
    local p="echo \$${j}"
    local dir="`eval $p`"
    if [ ! -d "$dir" -o ! -x "$dir" ]; then
      unset $j
      bmlist=`for i in $bmlist; do if [ $i != $j ]; then echo $i; fi; done | sort -u`
    fi
  done
  export bmlist
}

# jump to bookmark
function b ()
{
  p="echo \$$1"
  if echo $bmlist | egrep -q "\b$1\b"; then
    cd "`eval $p`"
  else
    echo $BOOKMARK_ERROR_COLOR unknown bookmark: $1 $COLOR_RESET
  fi
}

# save bookmark session
function bsave ()
{
  if [ -z "$1" ]; then
    echo $BOOKMARK_ERROR_COLOR Please give a session name. $COLOR_RESET
    return
  fi

  if [ -e "$BOOKMARK_SAVE_DIR/$1" ]; then
    local save="$BOOKMARK_SAVE_DIR/$1/.save/`date '+%Y.%m.%d-%H:%M:%S'`"
    mkdir -p "$save"
    mv "$BOOKMARK_SAVE_DIR/$1"/* "$save"/
    echo "Saved previous version of $1 in $save"
  else
    mkdir -p "$BOOKMARK_SAVE_DIR/$1"
  fi

  echo "$bmlist" > "$BOOKMARK_SAVE_DIR/$1/bmlist"

  local i=
  for i in $bmlist; do
    local p="echo \$${i}" ## there probably was a good reason for doing this???
    local dir="`eval $p`"
    echo "export $i=\"$dir\"" >> "$BOOKMARK_SAVE_DIR/$1/all"
  done
  echo "bmlist=\"$bmlist\"" >> "$BOOKMARK_SAVE_DIR/$1/all"

  export BOOKMARK_ENV="$1"
}

# load bookmark session
function bload ()
{
  if [ -z "$1" ]; then
    echo $BOOKMARK_ERROR_COLOR Please give a session name. $COLOR_RESET
    return
  fi

  export BOOKMARK_ENV="$1"
  source "$BOOKMARK_SAVE_DIR/$1/all";

  bm_hook_call bload $1
}

# remove bookmark session
function brm_session ()
{
  if [ -z "$1" ]; then
    echo $BOOKMARK_ERROR_COLOR Please give a session name. $COLOR_RESET
    return
  fi

  rm -rf "$BOOKMARK_SAVE_DIR/$1"
}

function bmigrate()
{
  if [ -z "$1" ]; then
    echo $BOOKMARK_ERROR_COLOR Please give a session name. $COLOR_RESET
    return
  fi

  rm -rf "$BOOKMARK_SAVE_DIR/$1/.save"

  _bmlist=`find "$BOOKMARK_SAVE_DIR/$1/" -type f -a ! -name all -a ! -name bmlist | sort -u | sed "s:$BOOKMARK_SAVE_DIR/$1/::"`

  truncate -s 0 "$BOOKMARK_SAVE_DIR/$1/all"

  for _bookmark in $_bmlist; do
    local _path=`cat $BOOKMARK_SAVE_DIR/$1/$_bookmark`

    echo "export $_bookmark=\"$_path\"" >> "$BOOKMARK_SAVE_DIR/$1/all"
  done
  echo "bmlist=\"$_bmlist\"" >> "$BOOKMARK_SAVE_DIR/$1/all"
}

function _bookmark_completion ()
{
  reply=(`echo ${bmlist// /}`)
}

function _bookmark_session_completion ()
{
  reply=(`ls $BOOKMARK_SAVE_DIR`)
}

compctl -K _bookmark_completion b
compctl -K _bookmark_completion brm
compctl -K _bookmark_session_completion bsave
compctl -K _bookmark_session_completion bload
compctl -K _bookmark_session_completion brm_session

# vim:filetype=zsh
